---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhanglong.
--- DateTime: 2019/7/2 20:51
---lua集成kafka
--[[
1：导入kafka的依赖库
2：配置当前可以支持的最大活跃连接数
3：判断当前的活跃连接数是否超过了最大活跃连接数，如果没有，则写kafka
4：拼接当前的请求及请求参数字符串，将拼接好的字符串写入到kafka集群5：
构建kafka请求生产者写入数据的时候，所需要的参数
        broker_list、producer_config、topic、key、message broker_list:kafka集群地址
        producer_config：默认topic：将数据写入哪个topic key:nil message：拼接好的字符串I
]]--

--设置最大活跃连接数
local maxUserNum = 1000
--指定kafka集群地址
local broker_list = {
    {host="192.168.25.111",port=9092},
    {host="192.168.25.112",port=9092},
    {host="192.168.25.113",port=9092}
}
--设置topic，将数据写到哪个topic
local topic = "B2CDATACOLLECTION1"
--设置生产者相关的配置参数
local producer_config = {request_timeout=2000}

--设置阈值，如果当前活跃连接数大于设置的最大活跃连接数，则不写入kafka数据
local isGone = true
--判断当前获取连接数是否超过了阈值
if (tonumber(ngx.var.connections_active) > maxUserNum) then
    isGone = false
end
--如果低于阈值的条件，才能写入到kafka中
if isGone then
    local time_local = ngx.var.time_local
    if time_local == nil then
        time_local = ""
    end

    local request = ngx.var.request
    if request == nil then
        request = ""
    end

    local request_method = ngx.var.request_method
    if request_method == nil then
        request_method = ""
    end

    local content_type = ngx.var.content_type
    if content_type == nil then
        content_type = ""
    end
    ngx.req.read_body()
    local request_body = ngx.var.request_body
    if request_body == nil then
        request_body = ""
    end

    local http_referer = ngx.var.http_referer
    if http_referer == nil then
        http_referer = ""
    end

    local remote_addr = ngx.var.remote_addr
    if remote_addr == nil then
        remote_addr = ""
    end

    local http_user_agent = ngx.var.http_user_agent
    if http_user_agent == nil then
        http_user_agent = ""
    end

    local time_iso8601 = ngx.var.time_iso8601
    if time_iso8601 == nil then
        time_iso8601 = ""
    end

    local server_addr = ngx.var.server_addr
    if server_addr == nil then
        server_addr = ""
    end

    local http_cookie = ngx.var.http_cookie
    if http_cookie == nil then
        http_cookie = ""
    end
    --封装数据
    local message = time_local .."#CS#".. request .."#CS#".. request_method .."#CS#".. content_type .."#CS#".. request_body .."#CS#".. http_referer .."#CS#".. remote_addr .."#CS#".. http_user_agent .."#CS#".. time_iso8601 .."#CS#".. server_addr .."#CS#".. http_cookie;

    --导入kafka的依赖包
    local producerPAC = require("resty.kafka.producer")
    --使用producer创建producer实例
    local producer = producerPAC:new(broker_list,producer_config)
    --发送消息
    local ok,err = producer:send(topic,"1",message)
    --大于日志
    if not ok then
        ngx.log(ngx.ERR,"kafka send message err :",err)
    end

end
